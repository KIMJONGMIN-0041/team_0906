https://shimseonjo.github.io/gitStart 정리URL햣
1. git으로 관리할 경로까지 이동
cd /c  << 이런식으로 경로이동
mkdir 파일생성
pwd 현재경로 보는법

2. 초기화(.git 폴더 생성 - 숨겨져 있음)
 - git init(장소 생성)을 친다 
 - 파일 보려면 ls -al (숨겨진 파일 확인)

3. 브랜치 이름 기본값 변경하기(master일때)
 - git config --global init.defaultBranch main(다음 브랜치명 수정)
 - git branch -M main(현재 브랜치명 수정)
4. git 상태확인
git status

5. git으로 관리하는 파일로 추가
git add .(현재경로를 기준으로 모든파일/파일명 하나하나도 가능)

* TAB누르면 자동완성 
* status 눌러서 현재 상태확인

6. commit(해당 시점을 저장)
git commit -m "커밋 메세지"

7. commit은 이전에 계정정보 등록 
# --global 옵션은 해당 컴퓨터 전체에 적용 글로벌 등록시 2개 계정 사용불가
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
*git config list로 확인

잘못했으면 --unset 넣어서 작업햣

8. commit 정보 확인
git log
*log치고 처음나오는 수 16진수(commit 구분 하는 수(그 시점으로 돌아가기 위해서))
  - 보통7자리 정도까지 치면 문제없음
9. 과제 
project_5/test1을 생성
git으로 관리 
파일 생성은 알아서.... 최소 커밋의 수는 5번이상 되도록 하세요


-------------------------------------
로컬 컴퓨터(코드있음)와 github 사이트(비어있음) 연결
1. remote 정보 확인
git remote (이름만표시)
git remote -v (url까지 표시)

2. remote 추가
git remote add 리모트 이름 
github 리파지토리주소 
get remote add origin https://github.com/KIMJONGMIN-0041/project4_work1.git
(주소는 새로 폴더 만들면 바뀜)
3. remote 삭제
git remote rm 리모트이름
git remote rm origin

(1). git commit -m "Added new files and updated content" 
(2). git add .로 파일내용 추가하기
(3). git commit으로 저장하기

4. github 데이터 넣기
git push -u origin main

*rm -rf .git 깃에서 폴더 지우기

다른계정 혹은 다시 연결하고 싶으면 윈도우>>자격증명관리자>>삭제하고 다시 연결

----------------------------
clone 하기 (github에 있는 코드를 내려받을때)
 - 코드가 없는 상태에서 전체 코드를 다운로드 받을 경우

   (현재 위치에 리파티토리 이름의 폴더를 만들고 파일을 가져온다.)
   - git clone<git-remote-url>
 
   (디렉토리 위치에 파일을 가져온다) 
   - git clone<git-remote-url><디렉토리>
   - git clone<git-remote-url> .


 - 한 단계위의 폴더로 받아야함
   전체를 다 받아야하면 clone

----------------------------
pull
 - 코드가 있는 상태에서 변경된 부분만 받을 경우

----------------------------
branch 작성
 - 브랜치 목록 확인
git branch 

 - 브랜치 생성
git branch test01

 - 브랜치 이동
git switch test01

 - 브랜치에서 소스 코딩, add, commit 작업 진행 (안하면 내용 다날라감)

------------------------
브랜치 병합
(병합은 가져오고 싶은 곳에서 하는 것, 내가 있는 위치에 다른위치에 있는 걸 가져오는것)
git merge 브랜치명
git add .
git commit -m "메세지"

브랜치 삭제
(삭제하고 싶은 곳 말고 다른 곳에서 수행)
git branch -d 브랜치명

브랜치 복구
git branch 브랜치명 커밋번호(위에서 말한 7자리 숫자)
 
git log --graph 
git log --graph --all(전부)
git log --graph --oneline (commit번호,메세지)

.git ignore은 git 폴더와 같이 있어야함
* 파일이름에 .들어가면 숨겨진 파일
app.ini
/app.ini(/경로기준으로 제거)
file/app.ini (파일폴더 안에 app.ini 제거)
